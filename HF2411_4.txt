FLASH(STRSTR) proId="000001"
mac=MAC
imei= "866"+mac
B7=[0x7B]
D7=[0x7D]
H22=[0x22]
A3=[0x3A]
C2=[0x2C]
cusP=[0x75,0x64,0x00]
mbP=[0x75,0x64,0x01]
CJ188P=[0x75,0x64,0x03]
CJh=[0xFE,0xFE,0xFE,0x68,0x10]
CJm=[0x03,0x90,0x1F,0x00]
CJe=[0x16]
mbs=[0x00,0x01]
mbf=[0x00,0x02]
mbd=[0x00,0x04]
inp=[]
Mb_L=0
ptl=""
vTp=""
poW=[0x01]
poC=[]
isD=FALSE
isB=FALSE
send=FALSE
getI= B7+H22+"msgType"+H22+A3+H22+"get"+H22+C2+H22+"imei"+H22+A3+H22+imei+H22+D7
JS=""
jsh=H22+"msgType"+H22+A3+H22+"datapoint"+H22+C2
JS2=""
jsh2=H22+"msgType"+H22+A3+H22+"status"+H22+C2
stus="0"
dId=""
typ=""
atr=""
val=""
vtyp="16h"
b=0
e=0
c2=0
i=0
c1=0
rT=0
lg=0

TIMER Receive 1000
IF(isD==1)
c1=c1+1
END
IF((inp.length())<66)
c1=0
isD=FALSE
send=FALSE
END
IF(c1==3)
isD=FALSE
c1=0
isB=TRUE
Mb_L=inp.length()
inptem=inp.subString(5,Mb_L)
udPos=inptem.indexOf("ud")
IF(udPos>0)
udPos=udPos+5
inp=inp.subString(0,udPos)
Mb_L=udPos
END
isB=FALSE
inptem=""
udPos=-1
END
t=SYSTIME
t=t-rT
IF(t>86400*1000)
RESET
rT=SYSTIME
END
IF(lg!=0)
lg=lg+1
END
IF(lg==5)
SEND(SOCK,A,getI)
lg=1
END
END

TIMER Search 3
IF(i<Mb_L && isB!=1)
char=inp.charAt(i)
IF(char==36)
b=i+1
END
IF(char==35)
e=i
isB=TRUE
END
i=i+1
END
IF(i>=Mb_L)
i=0
END
END

TIMER Instruct 1000
IF(isB==1 && send==0)
send=TRUE
dId=inp.subString(b,(b+19))
IF(isD==1)
BREAK()
END

typ=inp.subString((b+19),(b+21))
atr=inp.subString((b+21),(b+25))
insts=(inp.subString((b+25),e)).stringHex()
ptl=insts.subString(0,3)
lengt2=insts.length()
vTp=insts.charAt(3)
oprt=insts.subString(4,5)
poC=insts.subString(5,6)
cmd=""
IF(ptl==cusP && lengt2>9)
cmd=insts.subString(8,(lengt2-1))
vtyp="16h"
END
IF(ptl==mbP && lengt2==12)
mbip=insts.subString(8,9)
register=insts.subString(9,11)
IF(oprt==poW)
ELSE
cmd=mbip+poC+register
IF(vTp==2)
cmd=cmd+mbs
vtyp="16s"
END
IF(vTp==3)
cmd=cmd+mbf
vtyp="16i"
END
IF(vTp==5)
cmd=cmd+mbf
vtyp="16f"
END
IF(vTp==9)
cmd=cmd+mbs
vtyp="10i"
END
cmd=cmd+(CALCRC16(cmd)).toString(1,0)
END
END
CJcode=poC.charAt(0)
IF(ptl==CJ188P && lengt2==16 && CJcode==1)
CJip=[]
FOR n,14,7,-1
CJip=CJip+(insts.subString(n,(n+1)))
END
vtyp="10i"
cmd=CJh+CJip+poC+CJm
clc=43
FOR m,5,12,1
cl=(cmd.charAt(m))+256
clc=clc+cl
END
clcS=clc.toString(0,1)
CLC=clcS.subString(0,1)
cmd=cmd+CLC+CJe
END
SEND(UART,uart,cmd)
END
IF(send==1)
c2=c2+1
END
IF(c2>=2)
isB=FALSE
c2=0
send=FALSE
stus="0"
val="0"
reJS2()
END
END

RECV SOCK A
IF(isD==1 && (INPUT.subString(0,3))=="ud8")
isD=FALSE
c1=0
Mb_L=inp.length()
END
IF((INPUT.subString(5,17))==mac)
isD=TRUE
isB=FALSE
Mb_L=0
inp=""
lg=0
END
IF(isD==1)
inp=inp+INPUT
END
RETURN(FALSE)
END

RECV UART uart
len_input=INPUT.length()
IF(ptl==cusP)
val=INPUT.hexString()
stus="1"
reJS2()
reJS()
END
IF(ptl==mbP)
end2B=len_input-2
CRC=INPUT.subString(end2B,len_input)
compute_hex=CALCRC16(INPUT.subString(0,end2B))
compute_crc=compute_hex.toString(1,0)
IF(len_input<7 || compute_crc != CRC)
RETURN(FALSE)
END
IF(vtyp=="undefined")
ELSE
valueS=INPUT.subString(3,end2B)
val=valueS.hexString()
END
stus="1"
reJS2()
reJS()
END
IF(ptl==CJ188P)
p68=INPUT.indexOf("h")
IF(len_input<21 || p68<0)
RETURN(FALSE)
END
valueS=INPUT.subString((p68+14),(p68+18))
valueS=valueS.hexString()
val=(valueS.subString(6,8))+(valueS.subString(4,6))+(valueS.subString(2,4))+(valueS.subString(0,2))
stus="1"
reJS2()
reJS()
END
isB=FALSE
c2=0
send=FALSE
RETURN(FALSE)
END

FUNCTION reJS ()
str1=H22+"projectId"+H22+A3+H22+proId+H22
str2=C2+H22+"sensorId"+H22+A3+H22+dId+H22
str3=C2+H22+"type"+H22+A3+H22+typ+H22
str4=C2+H22+"attribute"+H22+A3+H22+atr+H22
str5=C2+H22+"value"+H22+A3+H22+val+H22
str6=C2+H22+"valuetype"+H22+A3+H22+vtyp+H22
JS=B7+jsh+str1+str2+str3+str4+str5+str6+D7
SEND(SOCK,A,JS)
RETURN(FALSE)
END

FUNCTION reJS2 ()
str1=H22+"projectId"+H22+A3+H22+proId+H22
str2=C2+H22+"sensorId"+H22+A3+H22+dId+H22
str3=C2+H22+"status"+H22+A3+H22+stus+H22
JS2=B7+jsh2+str1+str2+str3+D7
SEND(SOCK,A,JS2)
RETURN(FALSE)
END

CONN SOCK A
IF(Mb_L<66)
lg=1
END
RETURN(FALSE)
END