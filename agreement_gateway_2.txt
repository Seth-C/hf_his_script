FLASH(STRSTR) projectId="000001"
FLASH(NUM) IT=800
mac=MAC
imei= "866"+mac
H7B=[0x7B]
H7D=[0x7D]
H22=[0x22]
H3A=[0x3A]
H2C=[0x2C]
mbcusP=[0x75,0x64,0x00]
mbP=[0x75,0x64,0x01]
CJ188P=[0x75,0x64,0x03]
CJh=[0xFE,0xFE,0xFE,0x68,0x10]
CJm=[0x03,0x90,0x1F,0x00]
CJe=[0x16]
mbshort=[0x00,0x01]
mbfloat=[0x00,0x02]
mbdouble=[0x00,0x04]
input=[]
Mbs_L=0
protcl=""
devTp=""
param=""
vTp=""
opetW=[0x01]
opetC=[]
isdown=FALSE
isbusy=FALSE
sended=FALSE
imeiStr= H7B+H22+"imei"+H22+H3A+H22+imei+H22+H7D
JSON=H7B+H22+"status"+H22+H3A+H22+"505"+H22+H2C+H22+"projectId"+H22+H3A+H22+projectId+H22+H7D
status="504"
devId=""
type=""
attr=""
value=""
vtyp="hex"
unit=""
formula="v"
b=0
e=0
c2=0
i=0
c1=0
revT=0
logi=0

TIMER Receive 1000
IF(isdown==1)
c1=c1+1
END
IF((input.length())<80)
c1=0
isdown=FALSE
END
IF(c1==5)
isdown=FALSE
c1=0
Mbs_L=input.length()
END
t=SYSTIME
t=t-revT
IF(t>86400*1000)
RESET
revT=SYSTIME
END
IF(logi!=0)
logi=logi+1
END
IF(logi==5)
SEND(SOCK,A,imeiStr)
logi=1
END
END

TIMER Search 3
IF(i<Mbs_L && isbusy!=1)
char=input.charAt(i)
IF(char==36)
b=i+1
END
IF(char==35)
e=i
isbusy=TRUE
END
i=i+1
END
IF(i>=Mbs_L)
i=0
END
END

TIMER Instruct 1000
WAIT(IT)
IF(isbusy==1 && sended==0)
sended=TRUE
SEND(SOCK,A,JSON)
IF((input.length())!=Mbs_L)
BREAK()
END
devId=input.subString(b,(b+19))
type=input.subString((b+19),(b+21))
insts=(input.subString((b+21),e)).stringHex()
protcl=insts.subString(0,3)
lengt2=insts.length()
param=insts.charAt(3)
paramAttri()
vTp=insts.charAt(4)
operation=insts.subString(5,6)
opetC=insts.subString(6,7)
formula="v"
cmd=""
IF(protcl==mbcusP && lengt2>18)
cmd=insts.subString(17,(lengt2-1))
vtyp="hex"
END
IF(protcl==mbP && lengt2==21)
mbip=insts.subString(17,18)
register=insts.subString(18,20)
IF(operation==opetW)
ELSE
cmd=mbip+opetC+register
IF(vTp==2 || vTp==9)
cmd=cmd+mbshort
vtyp="short"
END
IF(vTp==3)
cmd=cmd+mbfloat
vtyp="int"
END
IF(vTp==5)
cmd=cmd+mbfloat
vtyp="float"
END
cmd=cmd+(CALCRC16(cmd)).toString(1,0)
END
END
CJcode=opetC.charAt(0)
IF(protcl==CJ188P && lengt2==25 && CJcode==1)
CJip=[]
FOR n,23,16,-1
CJip=CJip+insts.subString(n,(n+1))
END
vtyp="hex"
cmd=CJh+CJip+opetC+CJm
clc=43
FOR m,5,12,1
cl=cmd.charAt(m)+256
clc=clc+cl
END
clcS=clc.toString(0,1)
CLC=clcS.subString(0,1)
cmd=cmd+CLC+CJe
END
SEND(UART,uart,cmd)
END
IF(sended==1)
c2=c2+1
END
IF(c2>=3)
isbusy=FALSE
c2=0
sended=FALSE
status="502"
value="0"
reJson()
END
END

RECV SOCK A
IF((INPUT.subString(3,15))==mac)
isdown=TRUE
Mbs_L=0
input=""
logi=0
END
IF(isdown==1)
input=input + INPUT
END
RETURN(FALSE)
END

RECV UART uart
len_input=INPUT.length()
IF(protcl==mbcusP)
value=INPUT.hexString()
status="200"
reJson()
END
IF(protcl==mbP)
end2B=len_input-2
CRC=INPUT.subString(end2B,len_input)
compute_hex=CALCRC16(INPUT.subString(0,end2B))
compute_crc=compute_hex.toString(1,0)
IF(len_input<7 || compute_crc != CRC)
RETURN(FALSE)
END
IF(vtyp=="undefined")
valueS=INPUT.subString(3,end2B)
value=valueS.hexString()
ELSE
valueS=INPUT.subString(3,end2B)
value=valueS.hexString()
END
status="200"
reJson()
END
IF(protcl==CJ188P)
p68=INPUT.indexOf("h")
IF(len_input<20 || p68<0 || (INPUT.charAt((p68+9)))!=-127)
RETURN(FALSE)
END
valueS=INPUT.subString((p68+14),(p68+18))
valueS=valueS.hexString()
value=(valueS.subString(6,8))+(valueS.subString(4,6))+(valueS.subString(2,4))+(valueS.subString(0,2))
status="200"
reJson()
END
isbusy=FALSE
c2=0
sended=FALSE
RETURN(FALSE)
END

FUNCTION reJson ()
strb=H7B
stre=H7D
str0=H22+"status"+H22+H3A+H22+status+H22
str1=H2C+H22+"projectId"+H22+H3A+H22+projectId+H22
str2=H2C+H22+"deviceId"+H22+H3A+H22+devId+H22
str3=H2C+H22+"type"+H22+H3A+H22+type+H22
str4=H2C+H22+"attribute"+H22+H3A+H22+attr+H22
str5=H2C+H22+"value"+H22+H3A+H22+value+H22
str6=H2C+H22+"valuetype"+H22+H3A+H22+vtyp+H22
str7=H2C+H22+"unit"+H22+H3A+H22+unit+H22
str8=H2C+H22+"formula"+H22+H3A+H22+formula+H22
JSON=strb+str0+str1+str2+str3+str4+str5+str6+str7+str8+stre
RETURN(FALSE)
END
FUNCTION paramAttri ()
IF(param==0)
attr="undefined"
unit="-"
END
IF(param==1)
attr="temperature"
unit="℃"
END
IF(param==2)
attr="humidity"
unit="%rh"
END
IF(param==3)
attr="Illumination"
unit="lux"
END
IF(param==4)
attr="pm2.5"
unit="μg/m3"
END
IF(param==5)
attr="pm10"
unit="mg/m3"
END
IF(param==6)
attr="TSP"
unit="-"
END
IF(param==7)
attr="noise"
unit="db"
END
IF(param==8)
attr="CO2"
unit="ppm"
END
IF(param==12)
attr="wind_direction"
unit="°"
END
IF(param==13)
attr="wind_speed"
unit="m/s"
END
IF(param==15)
attr="voltage"
unit="V"
END
IF(param==16)
attr="electric_current"
unit="A"
END
IF(param==17)
attr="power_consumption"
unit="kwh"
END
IF(param==18)
attr="power"
unit="W"
END
IF(param==31)
attr="water_consumption"
unit="m3"
END
RETURN(FALSE)
END

CONN SOCK A
IF(Mbs_L<80)
logi=1
END
END